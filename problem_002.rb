### Problem:

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

### Notes:

# Because the first 2 numbers in the sequence are odd, and each subsequent
# number is the sum of the previous two, the sequence will follow the pattern:
#   odd odd even odd odd even...
# Therefore, we only have to count each third element in the sequence.

require './fibonacci'

UPPER_BOUND = 4_000_000
STEP = 3

sum = 0
element = STEP

while Fibonacci[element] < UPPER_BOUND
  sum += Fibonacci[element]
  element += STEP
end

puts sum
